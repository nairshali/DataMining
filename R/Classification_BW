library(rpart) 
library(plyr)

# Load data
bcw <-read.table(file.choose(),header=T,sep=",") 
bcw <- transform(bcw, Class = as.factor(Class))

# initialize variables

Rand.sample <- list()
Average_resub <- list()
Average_hold_out <- list()
sd_resub <- list()
sd_hold_out <- list()
resub_tot_time <- list()
holdout_tot_time <- list()


Average_loocv <- list()
sd_loocv <- list()
loocv_tot_time <- list()

# Total No of rows input data set
No_rows <- nrow(bcw) + 1

# initialize for sampling data
i <- 0

# randomly selecting a sample (e.g., with size 
# varying from 100 to n) from the original dataset D (|D|=n)
for (s in seq(100,No_rows,100)){
  
  # increment
  i = i + 1
  
  # sample size
  Rand.sample[i] <- s
  
  # sample data   
  SampledataIdx <- sample(No_rows, size = s, replace = FALSE)
  bcw.data <- bcw[SampledataIdx,]
  # print(paste(SampledataIdx))
  
  # initialize variables
  resub_accuracy <- list()
  hold_out_accuracy <- list()
  resub_time <- list()
  holdout_time <- list()

  # Resubstitutions and HoldOut
      # No of Trials
      for (t in 1:20){

        # sample size 90% - 10%
        bcw_row <- nrow(bcw.data)
        sampleRate <- 0.10
        sampleSize <- bcw_row * sampleRate
        # paste("sample size is: ", sampleSize)
        
        # Test data and training data
        testSampleIdx <- sample(bcw_row, size=sampleSize) #testSampleIdx
        testSet <- bcw.data[testSampleIdx,] #testSet
        trainingSet <- bcw.data[-testSampleIdx,] #trainingSet
        print(paste("Test set size<",nrow(testSet),">; Training set size<", nrow(trainingSet), ">", sep=""))
        
        # build a predictive model
        bcw.dt <- rpart(Class ~ ., data=trainingSet, method="class")  #bcw.dt

        start_time <- Sys.time()
        # Resubstitution method: acc/error on the training set
        prediction <- predict(bcw.dt, newdata=trainingSet, type="class")
        cM <- table(trainingSet$Class, prediction) #print(cM)
        acc <- sum(diag(cM))/sum(cM)
        resub_accuracy[t] = acc
        rErr <- 1.0 - acc
        print(paste("resub method: accuracy = ", round(acc*100,1), "% and resubstitution error = ", round(rErr*100,1), "%", sep=""))

        end_time <- Sys.time()
        resub_time[t] <- end_time - start_time
        
        start_time <- Sys.time()
        # Hold-out method: acc/error on the test set
        prediction <- predict(bcw.dt, newdata=testSet, type="class")
        cM <- table(testSet$Class, prediction) #print(cM)
        acc <- sum(diag(cM))/sum(cM)
        hold_out_accuracy[t] = acc
        rErr <- 1.0 - acc
        end_time <- Sys.time()
        holdout_time[t] <- end_time - start_time

        print(paste("hold-out method: accuracy = ", round(acc*100,1), "% and error = ", round(rErr*100,1), "%", sep=""))
     
        }
}
